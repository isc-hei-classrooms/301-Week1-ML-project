---
title: "Project 1 - House Price Prediction"
subtitle: "Presentation"
format:
  revealjs:
    theme: [default]
    width: 1920
    height: 1080
    slide-number: true
jupyter: python3
---

## 1. Problem Presentation

- Goal: predict **house prices** from features (quality, number of rooms, surface, etc.).  
- Pipeline includes data cleaning, encoding, and train/validation/test splitting.  

![](images/correlation.png)

---

## 2. Tested Models and Complexities

- Model 1: **Linear Regression** (`sklearn.linear_model.LinearRegression`) – low complexity.  
- Model 2: **Polynomial Regression (degree 2)** (`sklearn.preprocessing.PolynomialFeatures` + `LinearRegression`) – higher complexity.  
- Model 3: **Ridge Regression** (`sklearn.linear_model.Ridge`) – adds regularization to reduce overfitting.  

---

## 3. Polynomial Degree Choice and Learning Curve

- Tested polynomial regression of degree 2.  
- Captures non-linearities but may lead to overfitting.

---

## 4. Regularization

- Added Ridge regularization to reduce variance and stabilize predictions.  
- Shrinks coefficient magnitudes.  
- Improves generalization compared to plain polynomial regression.  

---

## 5. Final Model and Cost Function Comparison

- Evaluation metrics: R², RMSE, MAE.  
- Best compromise obtained with Ridge Regression.  
- Comparison across at least 3 (model / cost function) combinations.  

![](images/model_comparison.png)
